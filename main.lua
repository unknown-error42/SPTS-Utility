do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;local v16;while true do if (v0==3) then v13=select;v14=unpack or table.unpack;v15=tonumber;v16=nil;v0=4;end if (v0==2) then v9=math.ldexp;v10=getfenv or function()return _ENV;end;v11=setmetatable;v12=pcall;v0=3;end if (v0==4) then v16=function(v18,v19,...)local v27=1;local v28;v18=v5(v4(v18,5),"..",function(v29)if (v2(v29,2)==79) then v28=v1(v4(v29,1,1));return "";else local v78=0;local v79;while true do if (v78==0) then v79=v3(v1(v29,16));if v28 then local v110=v6(v79,v28);v28=nil;return v110;else return v79;end break;end end end end);local function v30(v31,v32,v33)if v33 then local v80=1080 -(874 + 206);local v81;while true do if (v80==(1081 -(113 + 968))) then v81=(v31/((1344 -(1053 + 289))^(v32-(1257 -(345 + 911)))))%((768 -(450 + 316))^(((v33-(3 -2)) -(v32-(1008 -(195 + 812)))) + ((1984 -(1137 + 846)) -0)));return v81-(v81%((1 -0) -0));end end else local v82=0 -0;local v83;while true do if (v82==(0 + 0)) then v83=(1 + 1)^(v32-(1911 -((4371 -3208) + 747)));return (((v31%(v83 + v83))>=v83) and ((1503 -(280 + 1222)) + 0)) or (1826 -(205 + 1621));end end end end local function v34()local v47=761 -(125 + 147 + 489);local v48;while true do if (v47==1) then return v48;end if (v47==(0 + 0)) then v48=v2(v18,v27,v27);v27=v27 + 1 + 0 + 0;v47=1 + 0;end end end local function v35()local v49=1929 -(1673 + 256);local v50;local v51;while true do if ((0 + 0)==v49) then v50,v51=v2(v18,v27,v27 + 2 + 0);v27=v27 + 1 + 1;v49=(4 -2) -1;end if (v49==(377 -(16 + 360))) then return (v51 * (1097 -841)) + v50;end end end local function v36()local v52,v53,v54,v55=v2(v18,v27,v27 + 3 + 0);v27=v27 + 4;return (v55 * 16777216) + (v54 * (65970 -(340 + 94))) + (v53 * (723 -467)) + v52;end local function v37()local v56=0 + 0;local v57;local v58;local v59;local v60;local v61;local v62;while true do if (v56==(0 -0)) then v57=v36();v58=v36();v56=1 -0;end if (v56==(4 -(1 + 2))) then v59=383 -(371 + 11);v60=(v30(v58,1453 -(1403 + 49),20) * ((4 -2)^(11 + 21))) + v57;v56=610 -(115 + (915 -422));end if (v56==(2 + 0)) then v61=v30(v58,(1305 -(896 + 401)) + 13,1156 -((1246 -742) + 621));v62=((v30(v58,3 + 29)==(984 -(815 + 168))) and  -(1772 -(978 + 793))) or (1678 -(550 + 1127));v56=(524 + 636) -(279 + 878);end if (v56==(6 -3)) then if (v61==(441 -(402 + 31 + 8))) then if (v60==(0 -0)) then return v62 * (1492 -(118 + 1374));else local v111=0;while true do if ((1530 -(1069 + 461))==v111) then v61=(2412 -(292 + 836)) -(99 + 1184);v59=1928 -(20 + (3862 -(561 + 1393)));break;end end end elseif (v61==2047) then return ((v60==((1681 -(1030 + 651)) -0)) and (v62 * (((2 + 0) -1)/(0 -(0 -0))))) or (v62 * NaN);end return v9(v62,v61-(541 + 230 + 252)) * (v59 + (v60/(((1931 -(832 + 1095)) -2)^(140 -88))));end end end local function v38(v39)local v63;if  not v39 then v39=v36();if (v39==0) then return "";end end v63=v4(v18,v27,(v27 + v39) -(1 + 0));v27=v27 + v39;local v64={};for v76=57 -(43 + 13), #v63 do v64[v76]=v3(v2(v4(v63,v76,v76)));end return v7(v64);end local v40=v36;local function v41(...)return {...},v13("#",...);end local function v42()local v65=0;local v66;local v67;local v68;local v69;local v70;local v71;while true do if (2==v65) then for v89=1,v36() do local v90=0 -0;local v91;while true do if (v90~=(1225 -(223 + 1002))) then else v91=v34();if (v30(v91,783 -(149 + 633),3 -2)==(0 + 0)) then local v122=613 -(390 + 223);local v123;local v124;local v125;local v126;local v127;while true do if (v122~=(3 -2)) then else v125=nil;v126=nil;v122=5 -3;end if (v122~=(2 + 0)) then else v127=nil;while true do if ((1 + 0)==v123) then local v138=0 + 0;while true do if (v138~=0) then else v126=nil;v127=nil;v138=1299 -(1252 + 46);end if (v138~=(1296 -(1070 + 225))) then else v123=1 + 1;break;end end end if (v123~=(0 + 0)) then else local v139=0 -0;while true do if (v139==(0 + 0)) then v124=0;v125=nil;v139=1 + 0;end if (v139==(1 + 0)) then v123=1;break;end end end if (v123==(1272 -(600 + 670))) then while true do if ((1867 -(1214 + 653))==v124) then local v146=0;local v147;while true do if (v146==0) then v147=0 -0;while true do if (0==v147) then v125=v30(v91,2 -0,1607 -(927 + 677));v126=v30(v91,4,3 + 3);v147=1054 -(78 + 975);end if (1~=v147) then else v124=2 -1;break;end end break;end end end if (v124==3) then if (v30(v126,3,3)~=1) then else v127[13 -9]=v71[v127[4]];end v66[v89]=v127;break;end if (v124~=(1 + 0)) then else local v149=0;local v150;while true do if (v149~=(1898 -(1309 + 589))) then else v150=0;while true do if (v150~=(1 + 0)) then else v124=2;break;end if (v150~=0) then else v127={v35(),v35(),nil,nil};if (v125==0) then local v247=0;local v248;local v249;while true do if (v247~=(1948 -(1581 + 366))) then else while true do if (v248~=0) then else v249=0 + 0;while true do if ((0 + 0)~=v249) then else v127[1262 -(172 + 1087)]=v35();v127[4]=v35();break;end end break;end end break;end if (v247==0) then v248=0;v249=nil;v247=1;end end elseif (v125==1) then v127[3]=v36();elseif (v125==2) then v127[3]=v36() -((6 -4)^16);elseif (v125==3) then local v308=0 + 0;local v309;while true do if (v308==(0 + 0)) then v309=0 -0;while true do if (v309~=0) then else v127[3]=v36() -((2 -0)^(15 + 1));v127[4]=v35();break;end end break;end end end v150=1724 -(972 + 751);end end break;end end end if (v124~=2) then else local v151=0 -0;local v152;local v153;while true do if ((367 -(46 + 320))==v151) then while true do if (v152~=(0 -0)) then else v153=0 + 0;while true do if ((1 + 0)~=v153) then else v124=3;break;end if (v153==(185 -(171 + 14))) then local v251=0;local v252;while true do if (v251~=(0 -0)) then else v252=0;while true do if (v252~=0) then else local v320=0;while true do if (v320~=(0 + 0)) then else if (v30(v126,1 + 0,1)~=1) then else v127[2]=v71[v127[2]];end if (v30(v126,2,6 -4)~=1) then else v127[3]=v71[v127[3]];end v320=1;end if (v320~=(2 -1)) then else v252=577 -(503 + 73);break;end end end if (v252==1) then v153=1;break;end end break;end end end end break;end end break;end if (v151~=(1157 -(947 + 210))) then else v152=0 -0;v153=nil;v151=1193 -(515 + 677);end end end end break;end end break;end if (v122==(1747 -(160 + 1587))) then v123=1439 -(1037 + 402);v124=nil;v122=1;end end end break;end end end for v92=1,v36() do v67[v92-1]=v42();end for v94=1,v36() do v68[v94]=v36();end return v69;end if (v65==0) then local v84=260 -(238 + 22);while true do if (v84~=2) then else v65=1;break;end if (1==v84) then local v109=0 + 0;while true do if (v109==1) then v84=2;break;end if (v109==0) then v68={};v69={v66,v67,nil,v68};v109=1915 -(1133 + 781);end end end if (v84~=(0 + 0)) then else v66={};v67={};v84=1903 -(772 + 1130);end end end if (v65==1) then v70=v36();v71={};for v96=1,v70 do local v97=0 + 0;local v98;local v99;local v100;local v101;local v102;while true do if (v97==(1224 -(852 + 370))) then v102=nil;while true do if (v98~=2) then else while true do if (v99==(128 -(62 + 66))) then local v137=0;while true do if (v137~=0) then else local v142=925 -(320 + 605);while true do if (v142~=(0 -0)) then else v100=0;v101=nil;v142=705 -(315 + 389);end if (v142==(1942 -(1649 + 292))) then v137=1 + 0;break;end end end if (v137==1) then v99=2 -1;break;end end end if (v99==(2 -1)) then v102=nil;while true do if (v100~=(0 -0)) then else local v143=0;local v144;while true do if (v143~=(1594 -(1511 + 83))) then else v144=0;while true do if ((0 -0)~=v144) then else local v156=0 + 0;local v157;while true do if (v156==0) then v157=0 -0;while true do if (v157~=(1887 -(1834 + 52))) then else v144=586 -(66 + 519);break;end if (v157==0) then local v254=897 -(635 + 262);while true do if (v254==0) then v101=v34();v102=nil;v254=1973 -(1897 + 75);end if (v254==(2 -1)) then v157=4 -3;break;end end end end break;end end end if (v144==(3 -2)) then v100=1887 -(1660 + 226);break;end end break;end end end if (v100~=(4 -3)) then else if (v101==1) then v102=v34()~=(0 -0);elseif (v101==(1466 -(1362 + 102))) then v102=v37();elseif (v101~=3) then else v102=v38();end v71[v96]=v102;break;end end break;end end break;end if ((0 + 0)==v98) then local v131=0 + 0;while true do if (v131==1) then v98=1 + 0;break;end if ((0 -0)~=v131) then else v99=0 -0;v100=nil;v131=2 -1;end end end if ((1 + 0)==v98) then v101=nil;v102=nil;v98=2;end end break;end if (v97~=0) then else v98=1576 -(61 + 1515);v99=nil;v97=1;end if (v97~=1) then else v100=nil;v101=nil;v97=1 + 1;end end end v69[3]=v34();v65=1 + 1;end end end local function v43(v44,v45,v46)local v72=0;local v73;local v74;local v75;while true do if (v72==0) then v73=v44[1];v74=v44[2];v72=1;end if (v72==1) then v75=v44[3];return function(...)local v103=0;local v104;local v105;local v106;local v107;local v108;while true do if (v103==0) then v104=1;v105= -1;v103=1;end if (v103==2) then v108=nil;v108=function()local v112=v73;local v113=v74;local v114=v75;local v115=v41;local v116={};local v117={};local v118={};for v128=797 -(656 + 141),v107 do if ((v128>=v114) or ((5342 -2160)<(1588 -(982 + 241)))) then v116[v128-v114]=v106[v128 + (1678 -(107 + 1570))];else v118[v128]=v106[v128 + 1];end end local v119=(v107-v114) + 1 + 0;local v120;local v121;while true do local v129=0 -0;while true do if ((v129==(0 -0)) or ((1279 + 1900)==(4962 -((1256 -551) + 216 + 7)))) then local v136=760 -((1484 -(364 + 903)) + 543);while true do if ((v136==((803 -(108 + 694)) + 0)) or (2875<=(2812 -(16 + 506)))) then v129=1069 -(304 + 263 + 501);break;end if ((v136==(1194 -(384 + 301 + 509))) or ((818 + 3093)>(6551 -2204))) then v120=v112[v104];v121=v120[926 -(321 + 604)];v136=1 -0;end end end if (((451 + 2168)<=(4259 + 191)) and (v129==(364 -(219 + (1230 -(410 + 676)))))) then if ((v121<=(793 -(108 + 669))) or (((220 -(78 + 69)) + 654)>=(4396 -(125 + 1530)))) then if (((4023 -(1597 + 65))<=(952 + 2409)) and (v121<=(948 -(58 + 883)))) then if (((1393 + 1079)<(803 + 2086)) and (v121<=3)) then if (((1377 -711)<3542) and (v121<=((3476 -1787) -(899 + 789)))) then if ((v121==(1547 -(1153 + 394))) or ((1927 + 1498)>((15135 -11682) + 557))) then local v158=0 -0;local v159;local v160;while true do if ((v158==(0 + 0)) or ((1592 -(567 + 304))>(2485 + 22))) then local v244=1615 -(781 + 834);while true do if (((0 -0)==v244) or ((4008 -2296)>=(4264 -(215 + 320 + 992)))) then v159=0;v160=nil;v244=1;end if ((v244==(2 -1)) or (4577==((1334 + 3405) -(362 + 809)))) then v158=1 -0;break;end end end if ((4241>=(1217 -(99 + 516))) and (v158==(1558 -(339 + 1218)))) then while true do if ((v159==(0 + 0)) or ((366 + 1294)>2126)) then v160=v120[2];v118[v160]=v118[v160](v14(v118,v160 + 1 + 0,v120[2 + 1]));break;end end break;end end else v118[v120[1988 -(820 + 1166)]][v120[3]]=v120[11 -7];end elseif ((3285<=(6828 -(966 + 871))) and (v121>(4 -2))) then do return;end else for v233=v120[474 -(445 + 27)],v120[3] do v118[v233]=nil;end end elseif ((v121<=(1 + 2 + 2)) or ((64 + 15)==(97 + 94))) then if ((v121==(786 -(658 + 124))) or (((2724 -(84 + 523)) -730)<=((1015 -804) -128))) then v118[v120[2 + 0]]=v46[v120[2 + 1]];else local v165=68 -(42 + 23 + 3);local v166;local v167;local v168;local v169;while true do if (((4810 -(171 + 188))>=(1953 -((3993 -2893) + 106))) and (v165==(0 -(0 -0)))) then v166=0 + 0;v167=nil;v165=1 + 0 + 0;end if ((2584>=(2789 -804)) and (v165==((22 -16) -4))) then while true do if ((v166==0) or (((2864 + 2438) -((70 -26) + (3731 -2352)))<1280)) then local v257=0 -0;while true do if (((2400 -(489 + 1476))<(7713 -5215)) and (v257==(0 + 0))) then v167=841 -(419 + 422);v168=nil;v257=1;end if (((693 -(224 + 468))==v257) or ((1057 + 1681)>=(2523 + 1347))) then v166=2 -1;break;end end end if ((v166==(1 -(1753 -(701 + 1052)))) or ((1813 -(1042 + 693))>(12529 -9920))) then v169=nil;while true do if ((v167==(186 -(17 + 169))) or ((2520 -(28 + 1109))>(9521 -5416))) then local v292=0 + 0;while true do if ((v292==((336 -(314 + 22)) -(644 -(516 + 128)))) or (4393<(4132 -(815 + 790)))) then v168=v120[3 + 0];v169=v118[v168];v292=1;end if ((v292==(1957 -(1065 + 891))) or (535>=(2035 + 1397))) then v167=557 -((1510 -(635 + 549)) + 230);break;end end end if ((1108>((10 + 533) -(40 + 13))) and (v167==(1 + 0))) then for v310=v168 + (639 -(407 + 231)),v120[4 + 0] do v169=v169   .. v118[v310];end v118[v120[2]]=v169;break;end end break;end end break;end if ((1==v165) or ((2557 + 1842)<2530)) then v168=nil;v169=nil;v165=4 -2;end end end elseif ((v121==(9 -3)) or ((316 + 1609)>=2069)) then v118[v120[2]]={};else local v171=0 -0;local v172;local v173;while true do if ((((15125 -(213 + 321)) -10455)>(10415 -7961)) and ((1686 -(817 + 869))==v171)) then local v245=0 -0;while true do if ((v245==(0 -(0 -0))) or (521>(4967 -1936))) then v172=0 + 0;v173=nil;v245=1280 -(731 + 548);end if (((517 + 488)<=3058) and (v245==1)) then v171=2 -1;break;end end end if ((v171==(1 + 0)) or (((743 + 7582) -4251)<(1676 -(728 + 473)))) then while true do if ((v172==(1674 -(710 + 964))) or ((9727 -7208)<=2459)) then v173=v120[1084 -(55 + 1027)];v118[v173](v14(v118,v173 + (1 -0),v120[8 -5]));break;end end break;end end end elseif (((11506 -7834)>=852) and (v121<=(1144 -(969 + 164)))) then if ((v121<=9) or ((4685 -(719 + 250))<=817)) then if ((v121>((850 -(204 + 480)) -(130 + 28))) or ((3500 -(1065 + 513))<(877 + 1001))) then local v174=0 -0;local v175;local v176;local v177;while true do if ((v174==(1 + 0)) or ((2715 + 1023)<(10462 -6752))) then v177=nil;while true do if ((v175==(1 + 0)) or ((2492 -(1717 + 16))>(2896 -((2142 -(1377 + 71)) + (796 -486))))) then while true do if (((4824 -2541)>1142) and (v176==(0 + 0))) then v177=v120[2];v118[v177]=v118[v177](v118[v177 + 1 + 0]);break;end end break;end if ((v175==(0 + 0)) or (((4339 -(46 + 491)) -(22 + 34))<=(39 + 138))) then v176=0 -0;v177=nil;v175=1 + 0;end end break;end if ((v174==(82 -(11 + 71))) or ((4881 -3076)==((10223 -5199) -(573 + 1249)))) then v175=0 + 0;v176=nil;v174=1 + 0;end end else v118[v120[7 -5]]=v118[v120[7 -4]];end elseif ((v121>(7 + 3)) or (867>=(2651 -(559 + 35)))) then local v180=0 -0;local v181;local v182;while true do if ((3165>(1415 + 451)) and ((3 -2)==v180)) then while true do if ((571<(7055 -3699)) and (v181==(0 -0))) then v182=v120[1709 -(853 + 854)];v118[v182](v14(v118,v182 + (1950 -(1183 + 766)),v105));break;end end break;end if ((v180==0) or ((16649 -11741)<(1680 -1007))) then v181=0 + 0;v182=nil;v180=1 + 0;end end else v118[v120[2]]=v118[v120[1734 -(830 + 901)]][v120[1 + 3]];end elseif ((((10689 -6539) -(437 + (1406 -(335 + 62))))>(202 + 35)) and (v121<=13)) then if (((1998 + 127 + 1254)==((3644 -(97 + 883)) + 715)) and (v121==(58 -46))) then v118[v120[2 + 0]][v120[1823 -(351 + 786 + 683)]]=v118[v120[1636 -(343 + 1289)]];elseif (((1119 -589)<(723 + 2554 + 532)) and (v120[1368 -(595 + 771)]==v118[v120[14 -10]])) then v104=v104 + 1;else v104=v120[1 + 2];end elseif (((1977 -839)==(267 + 270 + 601)) and (v121<=(14 + 0))) then local v187=1291 -(69 + 1222);local v188;local v189;while true do if (((6049 -(258 + 1115))>=(13601 -9293)) and (v187==(836 -((845 -(140 + 180)) + (1405 -(806 + 289)))))) then while true do if (((192 -(153 + 39))==v188) or ((535 + 2668)>=4479)) then v189=v118[v120[12 -8]];if ( not v189 or (2118==(10315 -6281))) then v104=v104 + 1;else local v289=1125 -(318 + 270 + 537);local v290;local v291;while true do if ((v289==(1 + 0)) or ((2290 + 652)>(11526 -7643))) then while true do if (((1131 -(230 + 417))>=(113 + 31)) and (v290==((0 -0) + 0))) then v291=0;while true do if ((727==(2598 -1871)) and (v291==(1035 -(292 + 743)))) then v118[v120[4 -2]]=v189;v104=v120[(754 -(237 + 515)) + 1];break;end end break;end end break;end if ((v289==(0 -0)) or (298>=2162)) then v290=0 -0;v291=nil;v289=2 -1;end end end break;end end break;end if (((2723 + 1236)==3959) and (v187==(164 -(21 + 143)))) then v188=0;v189=nil;v187=288 -(68 + 219);end end elseif ((v121==(61 -46)) or ((6266 -4104)==(3237 -(925 + 169)))) then v118[v120[961 -(8 + 8 + 943)]]=v120[3 -0]~=(0 -0);else v118[v120[1321 -(1014 + 305)]]= not v118[v120[3]];end elseif ((v121<=25) or ((238 + (4617 -(544 + 202)))==(4975 -(376 + 1433)))) then if (((7280 -3810)==3470) and (v121<=(40 -20))) then if ((v121<=(70 -52)) or ((251 + 366)>((1177 -(425 + 626)) + 498))) then if ((v121==(50 -33)) or ((5547 -(1339 + 100))<=(2692 -(367 + 158)))) then local v190=0 + 0;local v191;local v192;local v193;while true do if (((2619 + 2)>=(2283 -(340 + 345))) and (v190==((0 + 0) -(0 + 0)))) then v191=0;v192=nil;v190=999 -(739 + 259);end if (((1043 -(592 + 450))==v190) or ((207 + 678)>=((961 + 1326) -1363))) then v193=nil;while true do if ((v191==1) or ((4376 -1450)>(2965 + 1783))) then while true do if (((6716 -5353)>(786 -(1943 -(164 + 1258)))) and (v192==(0 + 0))) then v193=v120[423 -(386 + (56 -21))];v118[v193](v118[v193 + 1]);break;end end break;end if ((0==v191) or ((2275 -(393 + 382 + 176))<=(1729 -(20 + 1057)))) then local v261=0 + 0;while true do if (((2041 -((1182 -(170 + 942)) + 20))<=(6116 -(201 + 1780))) and (v261==(0 -0))) then v192=0;v193=nil;v261=1686 -(1432 + 253);end if ((v261==(1 + 0)) or ((2929 -(289 + 906))>=(5168 -((979 -(16 + 9)) + 4)))) then v191=1 + 0;break;end end end end break;end end elseif ((v118[v120[31 -(23 + 6)]]==v120[4]) or ((2445 + 138)<(99 + 44))) then v104=v104 + 1 + (1839 -(1836 + 3));else v104=v120[3];end elseif ((v121>(1912 -(1280 + (1656 -1043)))) or ((1722 + 65)==(952 + (6367 -3949)))) then local v194=0 + 0;local v195;local v196;local v197;while true do if (((2712 + 279 + 327)>=(4595 -(863 + 590))) and (v194==(0 -0))) then v195=543 -((880 -613) + 276);v196=nil;v194=2 -1;end if ((v194==1) or ((1102 -(76 + 788))>(14263 -11018))) then v197=nil;while true do if ((3835==(4133 -(199 + 99))) and (v195==(439 -(183 + 255)))) then for v276=1, #v117 do local v277=0;local v278;local v279;while true do if (((3482 -(16 + 44))<=(1511 + 2236)) and (v277==(1 -0))) then while true do if ((((1812 -(920 + 870)) + 3103)<=(5535 -(124 + 9 + 1817))) and ((0 + 0 + 0)==v278)) then v279=v117[v276];for v332=0 + 0, #v279 do local v333=0;local v334;local v335;local v336;local v337;local v338;while true do if (((2045 -(271 + 34))==(2587 -(794 + 53))) and (v333==(0 + 0))) then v334=0 + 0;v335=nil;v333=1319 -(350 + 968);end if (((3110 -914)==(493 + 1703)) and (v333==(2 -0))) then v338=nil;while true do if (((1042 -216)<(5254 -(265 + 77 + 12))) and (v334==((281 + 573) -(65 + (1405 -(345 + 271)))))) then local v358=0;while true do if ((v358==(1577 -(1265 + 311))) or ((2216 + 1649)<(47 + 176))) then v334=(1061 -(676 + 383)) -1;break;end if (((3911 + 309)>=(405 + 611)) and (v358==(0 + 0))) then v335=0 + 0;v336=nil;v358=1 -0;end end end if ((v334==(894 -(513 + 379))) or ((3179 -(94 + 1 + 128))==(607 + 216))) then while true do if ((4056>((5695 -(1149 + 449)) -(459 + 94))) and (1==v335)) then v338=v336[5 -3];if (((v337==v118) and (v338>=v196)) or ((680 -(99 + 56))==(1571 -734))) then local v362=0 -0;local v363;local v364;while true do if ((v362==(1798 -(529 + 1269))) or (2704>4437)) then v363=72 -(52 + 20);v364=nil;v362=4 -3;end if ((v362==1) or (((8490 + 9692) -13789)==(1878 -(1317 -(254 + 203))))) then while true do if ((v363==(1259 -(7 + 1252))) or ((2248 -(64 + 407))==(6351 -2762))) then v364=283 -(119 + (269 -105));while true do if (((5219 -(5778 -(770 + 998)))<(3796 -1691)) and ((0 + 0)==v364)) then v197[v338]=v337[v338];v336[1]=v197;break;end end break;end end break;end end end break;end if ((v335==0) or (3690<(845 + 1311))) then local v361=(310 + 699) -(608 + 401);while true do if ((v361==(1065 -(227 + 838))) or ((3241 -((219 -(161 + 51)) + 857))==(6138 -3479))) then local v365=0 -0;while true do if (((840 + 1584)<(3613 + 897)) and (v365==1)) then v361=1233 -(123 + 1109);break;end if ((v365==(604 -(371 + 233))) or (2150>(155 + 4756))) then v336=v279[v332];v337=v336[1439 -(1306 + 132)];v365=1 + 0;end end end if ((v361==(2 -1)) or ((12149 -8090)>(5717 -(187 + 1086)))) then v335=2 -1;break;end end end end break;end if (((11523 -8248)>=(25 + 252)) and (v334==(1 + 0))) then local v359=0;while true do if (((2512 + (390 -267))<=(1251 + 3744)) and (v359==(2 -1))) then v334=1 + 1;break;end if ((v359==(1377 -(1045 + 332))) or ((3195 -(594 + 886))==(9174 -6806))) then v337=nil;v338=nil;v359=2 -1;end end end end break;end if (((9695 -7644)==((3519 -(250 + 92)) -1126)) and (v333==(931 -(55 + 41 + 834)))) then v336=nil;v337=nil;v333=2;end end end break;end end break;end if (((8965 -5810)==3155) and ((0 + 0 + (0 -0))==v277)) then v278=0 + (1396 -(809 + 587));v279=nil;v277=1 -(0 -0);end end end break;end if ((v195==0) or ((3613 -(52 + 24))>=4251)) then local v262=0 + 0;while true do if (((5935 -(1190 + 113))>=(109 + 1322)) and (v262==(1 -0))) then v195=1 + (1526 -(526 + 1000));break;end if (((925 -((71 -41) + 73))<(2535 -(903 + 613))) and (v262==(0 -0))) then v196=v120[1266 -(356 + 908)];v197={};v262=1 -0;end end end end break;end end else local v198=389 -(39 + 350);local v199;local v200;while true do if ((1357>(523 -263)) and (v198==0)) then v199=0 -0;v200=nil;v198=1 -(0 -0);end if (((2022 + 2088)>(516 + 176)) and ((2 -1)==v198)) then while true do if ((v199==(1941 -(1334 + 607))) or ((448 + 722)==(3223 -(185 + 8)))) then v200=v120[2];v118[v200]=v118[v200]();break;end end break;end end end elseif (((814 + 1891)>=(1287 -(90 + 641))) and (v121<=(12 + 10))) then if ((1152<=1605) and (v121==(19 + 2))) then local v201=0 + 0;local v202;local v203;local v204;while true do if ((((7556 -(414 + 413)) -4077)>=(1975 -(1052 + 28))) and (v201==1)) then v204=nil;while true do if (((0 -0)==v202) or (2897>(2881 + (1909 -1096)))) then local v265=0 -0;while true do if ((((8779 -4570) -((3817 -3011) + 925))<(5157 -1266)) and (v265==(1795 -(1318 + 476)))) then v202=416 -(129 + 286);break;end if (((0 -0)==v265) or ((2065 -(203 + (1268 -(147 + 668))))>=(2129 + 1819))) then local v298=0 -0;while true do if ((v298==1) or (1031>=(3342 -1682))) then v265=1 + 0;break;end if ((919<(7637 -5234)) and (v298==0)) then v203=v120[2 + 0];v204=v118[v120[6 -3]];v298=(510 -(216 + 292)) -1;end end end end end if (((3422 -2331)<=4502) and (v202==(2 -1))) then v118[v203 + 1]=v204;v118[v203]=v204[v120[(1554 -(1320 + 233)) + 3]];break;end end break;end if (((4317 -(330 + 1639))>(2984 -(830 + 95))) and (v201==(1968 -(1356 + (887 -(197 + 78)))))) then local v246=0 + 0;while true do if ((3008>=(7097 -4580)) and ((1121 -(1054 + 66))==v246)) then v201=(3 -2) + 0;break;end if ((((5681 + 1004) -(386 + 1332))>=((631 + 737) -(734 + 201))) and (0==v246)) then v202=0 + 0;v203=nil;v246=67 -((108 -52) + 10);end end end end elseif ((v118[v120[(2059 -(995 + 203)) -(326 + 533)]]==v118[v120[7 -3]]) or ((5647 -1568)<(161 + 777))) then v104=v104 + (1 -0);else v104=v120[461 -(92 + 366)];end elseif ((v121<=(14 + 9)) or ((1533 -(334 + 643))>(7194 -3797))) then v118[v120[5 -3]]();elseif ((v121==24) or (2542<=(4798 -2481))) then v104=v120[1054 -(402 + 649)];elseif ((2600>=(1994 -(500 + 711))) and v118[v120[1 + 1]]) then v104=v104 + 1 + 0;else v104=v120[3 + 0];end elseif ((v121<=(96 -67)) or ((18985 -14919)==4784)) then if ((v121<=(64 -37)) or ((1609 + 2096)<=(2827 -(2490 -(125 + 478))))) then if (((128 + 3290)>(3150 -646)) and (v121==(65 -39))) then v118[v120[1 + 1 + 0]]=v45[v120[347 -(111 + 233)]];else local v207=0 -(759 -(606 + 153));local v208;local v209;local v210;while true do if ((v207==0) or ((4256 -2731)>(7229 -4317))) then v208=0 -(0 + 0);v209=nil;v207=1 -0;end if (((5854 -(1554 + 177))>=(428 + 50)) and ((1404 -(1291 + 112))==v207)) then v210=nil;while true do if ((2867<(3519 -(306 + 273))) and (v208==0)) then v209=0 -0;v210=nil;v208=1995 -(1163 + 831);end if ((3408<=(6106 -(865 + 460))) and (v208==(1 + 0 + 0))) then while true do if ((1460>226) and (v209==(838 -(657 + 181)))) then v210=v120[2];v118[v210]=v118[v210](v14(v118,v210 + (1323 -(1113 + 209)),v105));break;end end break;end end break;end end end elseif ((((639 + 1675) -(437 + 351))>(1621 -((886 -(151 + 85)) + 307))) and (v121==(2020 -(39 + 130 + 1823)))) then local v211=0 -0;local v212;local v213;local v214;local v215;while true do if ((v211==((2300 -1631) -(404 + 263))) or ((5306 -(1778 + 53))<=(3425 -(466 + 715)))) then while true do if ((((366 -270) + 284)<=(6247 -(1246 + 63))) and (v212==(3 -2))) then local v269=166 -(121 + 45);while true do if ((v269==(1999 -(840 + 1159))) or ((2246 -(54 + 149))>2536)) then v215={};v214=v11({},{["__index"]=function(v301,v302)local v311=0 -0;local v312;local v313;while true do if ((v311==(0 -0)) or (4491<=3048)) then v312=0;v313=nil;v311=1 + 0;end if ((v311==(1 -0)) or (93==(9000 -5922))) then while true do if (((0 + 0)==v312) or ((2443 -1569)>(1198 + 1266))) then local v348=0 + 0;while true do if ((3622==3622) and (v348==(0 + 0))) then v313=v215[v302];return v313[1 + 0 + 0][v313[2]];end end end end break;end end end,["__newindex"]=function(v301,v302,v303)local v314=0;local v315;while true do if ((1243==1243) and (v314==0)) then v315=v215[v302];v315[1528 -(828 + 46 + 653)][v315[2]]=v303;break;end end end});v269=1 + (1472 -(1115 + 357));end if ((v269==(1 + 0)) or ((1133 + 51)==(1589 -(30 + 3 + 1297)))) then v212=3 -1;break;end end end if (((3031 -(550 + (2548 -1595)))<=(3853 -(2587 -(47 + 274)))) and (v212==0)) then local v270=843 -(453 + (1545 -1155));while true do if ((0==v270) or ((6016 -(948 + (692 -318)))<=(1486 + 326))) then v213=v113[v120[3]];v214=nil;v270=1 -0;end if (((207 + 50 + 21)==((3100 -2029) -793)) and ((2 -1)==v270)) then v212=2 -1;break;end end end if ((1145==((5022 -3091) -(399 + 387))) and (v212==(741 -(663 + 76)))) then for v280=3 -2,v120[19 -15] do local v281=0 -0;local v282;local v283;while true do if (((191 + (4544 -(480 + 1310)))==(3554 -(583 + 26))) and (v281==1)) then while true do if ((3670==(4621 -(269 + 682))) and (v282==(3 -2))) then if ((v283[1]==8) or ((146 -85)>(4284 -(221 + (951 -(668 + 135)))))) then v215[v280-(1915 -(630 + 1284))]={v118,v283[3]};else v215[v280-(2 -1)]={v45,v283[3]};end v117[ #v117 + (795 -((850 -(68 + 5)) + 17))]=v215;break;end if ((v282==(0 + 0)) or (2073>=(980 + 2691))) then local v331=(1723 -(1705 + 18)) -0;while true do if (((338 -195)>46) and ((1 -0)==v331)) then v282=1089 -(774 + 153 + 161);break;end if ((v331==0) or ((2145 -699)>3913)) then v104=v104 + (1 -0);v283=v112[v104];v331=533 -(64 + 468);end end end end break;end if ((v281==(0 + 0 + 0)) or (563>4889)) then v282=1696 -(160 + 1536);v283=nil;v281=1190 -((3751 -2639) + 77);end end end v118[v120[1 + 1]]=v43(v213,v214,v46);break;end end break;end if ((v211==(0 -0)) or ((4138 -(1355 + 271 + 214))>(14333 -9847))) then v212=1059 -(166 + 893);v213=nil;v211=1928 -(797 + 1130);end if (((586 + 1713)>(1018 -525)) and (v211==(1653 -(1330 + 322)))) then v214=nil;v215=nil;v211=2;end end else v46[v120[3]]=v118[v120[2 + 0]];end elseif ((v121<=(1 + 30)) or ((3365 -1938)<(1849 -(460 + 463)))) then if ((((5691 -(650 + 1103)) -2748)<=(3487 -1926)) and (v121>30)) then v118[v120[1033 -(25 + 1006)]]=v120[(21 + 21) -(28 + (1114 -(994 + 109)))];else local v220=0 -(832 -(299 + 533));local v221;local v222;local v223;local v224;local v225;while true do if ((v220==2) or ((3810 + 27)<782)) then v225=nil;while true do if (((6438 -(1231 + 329))==(11994 -7116)) and (v221==(1 + 1))) then for v284=v222,v105 do local v285=0 -0;local v286;local v287;while true do if ((3691>=1554) and (v285==(1 + 0 + (1248 -(707 + 541))))) then while true do if ((v286==((4913 -3706) -(456 + 751))) or ((1830 -(1438 + 74))>(447 + 135))) then v287=0;while true do if ((v287==(1584 -(433 + 1151))) or ((2408 -(16 + 14))>=(10263 -7037))) then v225=v225 + (1090 -(648 + 441));v118[v284]=v223[v225];break;end end break;end end break;end if ((v285==(0 + 0)) or (3514>(3484 + 384))) then v286=1258 -(1165 + 93);v287=nil;v285=1341 -(989 + 351);end end end break;end if (((98 -(22 + 75))==v221) or (2762>=(1641 + 1144))) then local v272=0 -0;while true do if ((v272==(170 -(59 + 111))) or ((4082 + 553)<((4308 -3114) -(177 + 739)))) then v105=(v224 + v222) -(2 -1);v225=1979 -(1541 + 438);v272=440 -(339 + 100);end if ((v272==((1 + 0) -0)) or (((9566 -5368) -2544)>=2365)) then v221=5 -(957 -(64 + 890));break;end end end if ((v221==(0 + (0 -0))) or ((223 + 275 + 293)<339)) then v222=v120[5 -3];v223,v224=v115(v118[v222](v118[v222 + (297 -((556 -(30 + 490)) + 260))]));v221=1;end end break;end if ((((3 -2) + 0)==v220) or ((3450 + 1304)<=(382 + 666))) then v223=nil;v224=nil;v220=2;end if (((0 -0)==v220) or ((8152 -(6740 -(362 + 696)))>(5551 -(401 + 373)))) then v221=655 -(206 + 449);v222=nil;v220=1;end end end elseif ((v121<=(46 -14)) or ((3312 -(1518 + 294))>(2397 -((430 -283) + 701)))) then local v226=0 + 0 + 0;local v227;local v228;local v229;local v230;local v231;local v232;while true do if ((((608 + 961) -(1364 + 203))==v226) or ((5490 -1397)>(4838 -(550 + 114)))) then v231=nil;v232=nil;v226=440 -(351 + 86);end if (((3192 + 243)>(4514 -(175 + 1001))) and (v226==(1582 -(812 + 767)))) then while true do if (((1964 -(527 + 628))<(3046 + 1086)) and (v227==(1038 -(849 + 189)))) then local v274=0 + 0;while true do if (((2000 + 207)==(2497 -(201 + 89))) and ((0 -0)==v274)) then v228=0 + 0;v229=nil;v274=1 -0;end if (((586 -(288 + 140))<=((10208 + 9163) -14714)) and ((1001 -(741 + 259))==v274)) then v227=1;break;end end end if ((382<(2354 + 1824)) and (v227==(3 -2))) then local v275=0 + 0;while true do if ((v275==(1980 -(1888 + 92))) or (((6472 -3808) -(733 + 1186))>=4419)) then v230=nil;v231=nil;v275=2 -1;end if (((13607 -10880)==(4221 -((3222 -1839) + (349 -(76 + 162))))) and (v275==(1285 -(878 + 406)))) then v227=1607 -(161 + (3818 -2374));break;end end end if (((2 + 0)==v227) or ((64 + 127)>(5526 -(638 + (772 -601))))) then v232=nil;while true do if ((v228==(1034 -(893 + (1384 -(840 + 404))))) or ((5889 -2635)<=(3210 -(57 + 40 + (1649 -973))))) then local v305=(3691 -2208) -(814 + 669);while true do if ((v305==((0 + 0) -0)) or ((3990 + (1405 -(478 + 351)))<=(1593 -631))) then v105=(v231 + v229) -1;v232=0;v305=720 -(77 + 4 + 638);end if ((v305==(1 -(0 + 0))) or ((1968 -(1080 + 146))>(562 + 1236))) then v228=6 -(3 + 1);break;end end end if (((10213 -5681)==(6136 -(5 + 1599))) and ((570 -(180 + 390))==v228)) then local v306=0 + 0;local v307;while true do if ((v306==(0 + 0)) or ((5641 -3561)==3145)) then v307=0 + 0;while true do if ((v307==(2 -(1 + 0))) or (4220<=1069)) then v228=1;break;end if ((v307==(0 + 0)) or (1321>=(1964 -(384 + 178)))) then local v341=973 -(210 + (1768 -1005));while true do if ((v341==((1127 -(411 + 132)) -(174 + 409))) or ((4048 -(867 + 328))>=(6256 -(1295 + 581)))) then v307=1925 -(1320 + 604);break;end if ((v341==0) or ((1925 -1012)==(1268 + 2693))) then v229=v120[1 + 1];v230,v231=v115(v118[v229](v14(v118,v229 + (1782 -(597 + 862 + 322)),v120[3])));v341=(1390 -1003) -(301 + 85);end end end end break;end end end if ((v228==(5 -3)) or (((4603 + 826) -(719 + 351))==(129 + 961))) then for v316=v229,v105 do local v317=0 + (0 -0);local v318;local v319;while true do if (((4045 -(382 + 664))==(286 + 2713)) and (1==v317)) then while true do if ((v318==(0 + 0 + 0)) or ((1220 + 1059)==(4146 -1704))) then v319=0 -0;while true do if ((v319==(0 -0)) or ((1456 + 187)>=4344)) then v232=v232 + 1 + 0 + 0;v118[v316]=v230[v232];break;end end break;end end break;end if ((v317==0) or ((3313 + (993 -(20 + 9)))<=(2486 -744))) then v318=0 + 0;v319=nil;v317=1;end end end break;end end break;end end break;end if ((2399<=(4932 -(1284 + 56))) and (1==v226)) then v229=nil;v230=nil;v226=4 -2;end if (((0 + 0)==v226) or (1821<=(359 + 724))) then v227=0;v228=nil;v226=1 + 0;end end elseif ((v121==(18 + 15)) or ((2184 + 342)>(5423 -(541 + 193)))) then v45[v120[3]]=v118[v120[1424 -(354 + 1068)]];else v118[v120[1 + (1124 -(124 + 999))]]=v43(v113[v120[684 -((1694 -(106 + 1137)) + 57 + 173)]],nil,v46);end v104=v104 + 1 + 0;break;end end end end;v103=3;end if (3==v103) then A,B=v41(v12(v108));if  not A[1] then local v130=v44[4][v104] or "?";error("Script error at ["   .. v130   .. "]:"   .. A[2]);else return v14(A,2,B);end break;end if (v103==1) then v106={...};v107=v13("#",...) -1;v103=2;end end end;end end end return v43(v42(),{},v19)(...);end;vv10(),...);break;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v4=string.sub;v0=1;end if (v0==1) then v5=string.gsub;v6=string.rep;v7=table.concat;v8=table.insert;v0=2;end end end

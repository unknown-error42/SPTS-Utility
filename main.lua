do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;local v16;while true do if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v0=1;end if (v0==1) then v4=string.sub;v5=string.gsub;v6=string.rep;v0=2;end if (2==v0) then v7=table.concat;v8=table.insert;v9=math.ldexp;v0=3;end if (v0==5) then v16=nil;v16=function(v25,v26,...)local v27=0;local v28;local v29;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;while true do if (v27==0) then v28=1;v29=nil;v25=v5(v4(v25,5),"..",function(v40)if (v2(v40,2)==79) then local v81=0;while true do if (v81==0) then v29=v1(v4(v40,1,1));return "";end end else local v82=v3(v1(v40,16));if v29 then local v90=v6(v82,v29);v29=nil;return v90;else return v82;end end end);v27=1;end if (v27==3) then v33=nil;v33=function()local v48=0 -(0 -0) ;local v49;local v50;local v51;local v52;while true do if (v48==0) then v49,v50,v51,v52=v2(v25,v28,v28 + 2 + 1 + 0 );v28=v28 + (6 -2) ;v48=1 + 0 ;end if (v48==(1 + 0)) then return (v52 * (70624991 -53847775)) + (v51 * (53310 + 12226)) + (v50 * (458 -(80 + 122))) + v49 ;end end end;v34=nil;v27=4;end if (v27==4) then v34=function()local v53=(0 -0) + 0 ;local v54;local v55;local v56;local v57;local v58;local v59;while true do if (v53==(0 -0)) then v54=v33();v55=v33();v53=1 + 0 ;end if (v53==(2 -0)) then v58=v30(v55,645 -(27 + 597) ,31);v59=((v30(v55,108 -76 )==(1 -0)) and  -(1 + 0)) or (1 + (299 -(172 + 127))) ;v53=25 -(8 + 14) ;end if (v53==(2 + 1)) then if (v58==(0 + 0)) then if (v57==(0 + 0)) then return v59 * ((27 -(21 + 6)) -0) ;else local v114=108 -(14 + 51 + 43) ;while true do if (v114==(0 -0)) then v58=288 -(274 + 13) ;v56=0;break;end end end elseif (v58==((205 -158) + 2000)) then return ((v57==(0 + 0)) and (v59 * (1/((281 -(98 + 183)) -(284 -(87 + 197)))))) or (v59 * NaN) ;end return v9(v59,v58-(3107 -2084) ) * (v56 + (v57/((3 -1)^(1057 -(585 + 420))))) ;end if (v53==(1062 -(2 + 33 + 1026))) then v56=(389 -(341 + 47)) + 0 ;v57=(v30(v55,839 -(221 + 617) ,200 -(57 + 123) ) * ((4 -2)^(1424 -(1348 + 44)))) + v54 ;v53=(2 + 1) -1 ;end end end;v35=nil;v35=function(v41)local v60=678 -(591 + 87) ;local v61;local v62;while true do if (v60==(1 -0)) then v61=v4(v25,v28,(v28 + v41) -(2 -1) );v28=v28 + v41 ;v60=(3551 -(107 + 1497)) -(570 + 1375) ;end if ((1785 -(999 + 783))==v60) then return v7(v62);end if (v60==((6 -4) + 0)) then v62={};for v91=1 + 0 , #v61 do v62[v91]=v3(v2(v4(v61,v91,v91)));end v60=1 + 1 + (238 -(11 + 226)) ;end if (v60==((2592 -(620 + 1318)) -(603 + 51))) then v61=nil;if  not v41 then local v98=0 + 0 ;while true do if (v98==(0 -0)) then v41=v33();if (v41==0) then return "";end break;end end end v60=1;end end end;v27=5;end if (v27==7) then v39=function(v42,v43,v44)local v63=0;local v64;local v65;local v66;while true do if (v63==0) then v64=v42[1];v65=v42[2];v63=1;end if (v63==1) then v66=v42[3];return function(...)local v93=1;local v94= -1;local v95={...};local v96=v13("#",...) -1 ;local function v97()local v99=v64;local v100=v65;local v101=v66;local v102=v37;local v103={};local v104={};local v105={};for v109=0 -0 ,v96 do if ((v109>=v101) or ((4157 -(223 + 571))<=1038)) then v103[v109-v101 ]=v95[v109 + 1 ];else v105[v109]=v95[v109 + (788 -(541 + 246)) ];end end local v106=(v96-v101) + (1 -0) ;local v107;local v108;while true do local v110=0 + (0 -0) ;while true do if ((((806 -481) + 553)<=(1069 + 1950)) and (v110==(1 + 0))) then if (((32 + 115)==147) and (v108<=(52 -36))) then if ((v108<=(1 + 6)) or ((5457 -(805 + 88))==(10319 -6317))) then if ((3878>(2022 + 781)) and (v108<=3)) then if ((v108<=(1 + 0)) or ((4732 -(373 + 614))>=(14165 -10339))) then if (((1043 -696)<=(1289 + 487)) and (v108>(1539 -(1090 + 449)))) then local v130=1909 -((3444 -2226) + 691) ;local v131;local v132;local v133;local v134;while true do if ((v130==2) or ((564 + 38)==(5554 -(773 + 827)))) then while true do if ((v131==0) or ((3434 -(1614 + 87))<=(880 + 665))) then local v222=0;while true do if ((((2568 -1142) -644)<(209 + 4353)) and (v222==(261 -((1731 -(1465 + 122)) + 116)))) then v131=901 -(899 + 1) ;break;end if (((1117 + 3173)>(51 + 1067)) and (v222==(0 -0))) then v132=0 + 0 ;v133=nil;v222=(2 -1) + 0 ;end end end if ((850<((5223 -2049) -(456 + 815))) and (v131==(733 -(128 + 604)))) then v134=nil;while true do if ((v132==(76 -(19 + 57))) or ((220 + 4303)<=(5646 -(125 + 1635)))) then local v258=0 + 0 ;local v259;while true do if ((v258==(1480 -((1824 -609) + 265))) or ((6716 -2254)<(4935 -(1034 + (1120 -(148 + 526)))))) then v259=0 + 0 ;while true do if ((0==v259) or ((3511 -2515)>1748)) then local v316=0 + 0 ;while true do if ((v316==(0 + 0)) or (2948<2918)) then v133=v107[1451 -(1278 + 170) ];v134=v105[v133];v316=1 + 0 ;end if ((v316==(1 -0)) or ((2844 + 709)<(539 + 1374))) then v259=1 + 0 ;break;end end end if ((v259==(1 + 0)) or ((316 + 47 + 348)>=3537)) then v132=205 -(55 + (1682 -(390 + 1143))) ;break;end end break;end end end if ((v132==(1 + 0)) or ((1943 + 617)>=(16779 -13388))) then for v284=v133 + 1 ,v107[8 -4 ] do v134=v134   .. v105[v284] ;end v105[v107[(3 -1) + 0 ]]=v134;break;end end break;end end break;end if ((v130==(2 -1)) or (2612>(4581 -(78 + 314)))) then v133=nil;v134=nil;v130=2;end if ((v130==(0 + 0)) or ((728 + 630)<(158 + 67))) then v131=1555 -(796 + 759) ;v132=nil;v130=1;end end else local v135=(1057 + 505) -(779 + 783) ;local v136;local v137;local v138;local v139;while true do if (((1419 -(36 + 6))==(501 + 876)) and (v135==(1 + 0))) then v138=nil;v139=nil;v135=2 + 0 ;end if ((1921<(13889 -10176)) and (v135==(422 -(317 + 105)))) then v136=1498 -(295 + 1203) ;v137=nil;v135=1;end if ((v135==(2 + 0)) or (3572<(82 + 597 + (2628 -(823 + 672))))) then while true do if ((v136==(0 -0)) or ((5858 -(1115 + 391))<((474 -(70 + 85)) + 1198))) then v137=v100[v107[2 + 1 ]];v138=nil;v136=46 -(9 + 36) ;end if ((((232 + 4091) -1779)>(1421 -458)) and (v136==(4 -2))) then for v242=1,v107[3 + (1 -0) ] do local v243=0;local v244;local v245;local v246;while true do if (((9660 -6170)>=1992) and (v243==(0 -0))) then v244=689 -(549 + 140) ;v245=nil;v243=1;end if (((4198 -(695 + 810 + 264))==2429) and (v243==1)) then v246=nil;while true do if ((v244==(343 -(225 + 117))) or (((89 + 1128) -(177 + 86))>(10001 -7107))) then while true do if ((v245==(0 + 0)) or ((4378 + 254)<(10845 -6839))) then local v323=(1644 -1025) -(585 + 34) ;local v324;while true do if ((v323==0) or (((10646 + 2834) -9944)==2500)) then v324=196 -(22 + 174) ;while true do if ((v324==1) or ((956 + 3814)<=(3454 -2305))) then v245=1 + 0 ;break;end if (((0 + 0 + 0)==v324) or ((90 + 93)>=(7931 -4606))) then v93=v93 + (1624 -(832 + 791)) ;v246=v99[v93];v324=1 + 0 ;end end break;end end end if ((v245==(1 + 0 + 0)) or ((260 -151)==(591 + 1456))) then if ((v246[(636 + 316) -(244 + 707) ]==(21 -7)) or (4807==(3489 -(147 + 318)))) then v139[v242-(3 -2) ]={v105,v246[1970 -((1959 -1010) + 1018) ]};else v139[v242-(121 -((118 -69) + (135 -64))) ]={v43,v246[9 -6 ]};end v104[ #v104 + (3 -2) ]=v139;break;end end break;end if ((v244==(1503 -(797 + 706))) or ((2258 -1484)>(4622 -2523))) then v245=0 -0 ;v246=nil;v244=1 + 0 ;end end break;end end end v105[v107[3 -1 ]]=v39(v137,v138,v44);break;end if (((10472 -6144)>=1433) and (v136==(30 -(8 + 21)))) then local v225=0 -0 ;while true do if (((3964 + 986)>223) and (v225==(581 -(356 + 225)))) then v139={};v138=v11({},{__index=function(v261,v262)local v285=0 -0 ;local v286;local v287;local v288;while true do if (((0 -0)==v285) or (((3248 -2533) + 639)==(171 + 1140))) then v286=(1597 + 361) -(1426 + 532) ;v287=nil;v285=1 + 0 ;end if (((1217 -(339 + 877))==v285) or (((938 + 331) -(812 + 27))==936)) then v288=nil;while true do if (((1019 + 1239)<=(5381 -((1376 -(365 + 61)) + 123))) and (v286==(1 + 0))) then while true do if (((752 -(733 + 19))==v287) or ((5521 -(51 + 708))<=(330 + 3733))) then local v341=999 -(28 + 971) ;local v342;while true do if (((1650 -(235 + 1415))==v341) or ((7977 -5502)>(988 + 2132))) then v342=0 + 0 + 0 ;while true do if (((1739 + 91 + 355)>=((2091 -(606 + 492)) -(381 + 138))) and (v342==(923 -(524 + (880 -481))))) then local v364=0;while true do if (((6138 -(995 + 304))>(3473 -2031)) and (v364==0)) then v288=v139[v262];return v288[(1 + 0) -0 ][v288[2 + 0 ]];end end end end break;end end end end break;end if (((1947 + 357)<(9609 -6410)) and ((57 -(12 + 45))==v286)) then local v326=0;while true do if ((v326==(0 + 0)) or ((2694 + 727)<=(2008 -(1159 + 679)))) then v287=0 + 0 ;v288=nil;v326=994 -(387 + 606) ;end if ((v326==1) or (84==(3247 -(89 + 211)))) then v286=1580 -(135 + 1444) ;break;end end end end break;end end end,__newindex=function(v261,v262,v263)local v289=0 -0 ;local v290;local v291;while true do if ((3897>=((6001 -(212 + 1038)) -(1466 + 153))) and (v289==0)) then v290=0 + 0 ;v291=nil;v289=1;end if (((3482 -(64 + 72))>(1082 + 994)) and (v289==(293 -(218 + 74)))) then while true do if ((v290==0) or ((3312 + 666)>(2994 + 1831))) then v291=v139[v262];v291[(1 + 0) -0 ][v291[2 + 0 ]]=v263;break;end end break;end end end});v225=1 -0 ;end if ((v225==1) or ((1999 -1330)>=(3842 + 57))) then v136=2;break;end end end end break;end end end elseif ((v108>2) or (((3979 -(124 + 344)) -(433 + 105))<(1958 -(2 + 23 + 484)))) then local v140=0;local v141;local v142;local v143;local v144;local v145;local v146;while true do if ((4301>=(5534 -1664)) and (v140==(1 + 1))) then v145=nil;v146=nil;v140=2 + 1 ;end if (((7434 -4535)<=(5297 -(113 + 1869))) and (v140==(1201 -(980 + (1817 -(421 + 1175)))))) then v141=0;v142=nil;v140=3 -2 ;end if ((v140==(4 -3)) or ((1075 + 1930)>3307)) then v143=nil;v144=nil;v140=4 -2 ;end if ((v140==3) or (2558>4532)) then while true do if (((4902 -(746 + 140))>=(3674 -1655)) and (v141==2)) then v146=nil;while true do if ((v142==(3 -2)) or ((3383 -(1496 + 19 + 63))<1655)) then local v264=0 -(0 + 0) ;local v265;while true do if ((v264==(0 + 0)) or ((6080 -(1387 + 533))<=(2632 -(450 + 257)))) then v265=870 -(603 + 267) ;while true do if (((4437 -(1058 + 698))>(2024 -(94 + 752))) and (v265==1)) then v142=2;break;end if ((((7414 -1956) -((1315 -901) + 91))>=(173 -85)) and (v265==0)) then local v317=0 + 0 ;while true do if ((1027<2761) and (v317==(1 + 0))) then v265=2 -1 ;break;end if ((v317==((282 + 1514) -(515 + 1281))) or (4671<(5187 -(458 + 67)))) then v94=(v145 + v143) -(1 + 0) ;v146=0 + 0 ;v317=1 + 0 ;end end end end break;end end end if (((565 + 712)==1277) and (v142==(0 + 0))) then local v266=0 + 0 ;local v267;while true do if (((2440 -(404 + 936))<(5195 -(502 + 2518))) and (v266==(0 -0))) then v267=0 -0 ;while true do if (((2063 -1349)==((2114 -(566 + 1427)) + 593)) and (v267==(1 + 0))) then v142=1 + 0 ;break;end if ((v267==0) or ((4199 -(1676 + 38))<=(733 + 730))) then local v318=0 + 0 ;while true do if (((6474 -(640 + 1072))>760) and (v318==1)) then v267=1 + 0 ;break;end if (((5649 -3150)>=(2686 -2122)) and (v318==(575 -(186 + 389)))) then v143=v107[2 + 0 ];v144,v145=v102(v105[v143](v14(v105,v143 + (1 -0) ,v107[3])));v318=1340 -((2569 -(278 + 1595)) + 643) ;end end end end break;end end end if ((v142==(1863 -(253 + 1608))) or ((10716 -6595)>(6338 -(555 + 885)))) then for v292=v143,v94 do local v293=0 + (180 -(160 + 20)) ;local v294;local v295;while true do if (((2405 + 853)>=(2898 -(1170 + 608))) and ((1796 -(603 + 1192))==v293)) then while true do if ((v294==(0 + 0)) or ((4224 -1632)>=(238 + 2924))) then v295=13 -(7 + 6) ;while true do if (((4353 -(18 + (237 -(131 + 59))))<=4859) and (v295==(0 -0))) then v146=v146 + (2 -1) ;v105[v292]=v144[v146];break;end end break;end end break;end if (((7961 -3579)>(10017 -7848)) and (v293==(0 + 0))) then v294=0;v295=nil;v293=1;end end end break;end end break;end if ((v141==(2 -1)) or (4074==(4370 -(727 + 13)))) then local v226=0;while true do if ((v226==(3 -2)) or (2422>(5970 -3375))) then v141=1452 -(838 + 612) ;break;end if (((0 -0)==v226) or ((37 + 405)>(624 + 529))) then v144=nil;v145=nil;v226=1 + 0 + 0 ;end end end if ((v141==(0 + 0)) or ((1228 -(191 + 54))>(2454 -(79 + 369 + 68)))) then v142=0 -0 ;v143=nil;v141=1 -0 ;end end break;end end else v44[v107[12 -9 ]]=v105[v107[2]];end elseif (((3278 -(728 + 801))>(3204 -(1168 + (948 -498)))) and (v108<=(426 -(335 + 86)))) then if (((1829 -(76 + (1248 -(796 + 407))))<((1576 -(194 + 493)) + 1315)) and (v108==(4 + 0))) then local v149=0;local v150;local v151;local v152;while true do if ((v149==(1 -0)) or ((2367 + 1423)>=4989)) then v152=nil;while true do if ((v150==(1 + 0)) or ((1919 -(1137 + 551))>419)) then while true do if ((((1685 + 3369) -1536)>(4414 -1344)) and (v151==(1612 -(272 + 1340)))) then v152=v107[2];v105[v152]=v105[v152]();break;end end break;end if (((0 -0)==v150) or ((3150 + 391)<=(1524 + 1340))) then v151=0 + (0 -0) ;v152=nil;v150=1645 -(1637 + 7) ;end end break;end if ((v149==(237 -(173 + 64))) or ((1768 -(2978 -(900 + 830)))<=(516 -175))) then v150=1234 -(490 + 744) ;v151=nil;v149=1 + 0 ;end end else v105[v107[1389 -(1111 + 276) ]]= not v105[v107[591 -(115 + 207 + 266) ]];end elseif (((1628 + 1838)>=(2861 + 237)) and (v108>(5 + 1))) then if ((1876<=4215) and (v105[v107[5 -(922 -(93 + 826)) ]]==v105[v107[1 + 3 ]])) then v93=v93 + 1 ;else v93=v107[7 -4 ];end else local v154=0 -0 ;local v155;local v156;local v157;local v158;local v159;while true do if (((797 -(2 + 29 + 151))<2808) and (v154==0)) then v155=0;v156=nil;v154=1 + 0 ;end if (((489 -296)==193) and (v154==(2 -1))) then v157=nil;v158=nil;v154=5 -3 ;end if (((10260 -6567)==(4727 -(967 + 67))) and (v154==(1307 -(1296 + 9)))) then v159=nil;while true do if ((v155==0) or (48>=(685 -472))) then local v227=0;while true do if (((12353 -7648)==4705) and (v227==(2 -1))) then v155=1767 -(1547 + 219) ;break;end if (((925 + 685)<=(844 + 1627)) and (0==v227)) then v156=v107[2 + 0 ];v157,v158=v102(v105[v156](v105[v156 + 1 ]));v227=1;end end end if (((1898 + 1821)<4832) and (v155==(2 + 0))) then for v247=v156,v94 do local v248=0;local v249;while true do if ((v248==(0 + (0 -0))) or (4239==3942)) then v249=0 -0 ;while true do if (((1183 + 1393)<(7809 -4946)) and (v249==(0 -0))) then v159=v159 + ((1343 -(103 + 1237)) -(1593 -(1340 + 251))) ;v105[v247]=v157[v159];break;end end break;end end end break;end if ((v155==(1 + 0)) or ((3426 -((1204 -(42 + 53)) + 678))<(3665 -2195))) then local v228=360 -(248 + 112) ;while true do if ((1311>=(417 + 197)) and (v228==(251 -(89 + 162)))) then v94=(v158 + v156) -(3 -(1 + 1)) ;v159=(0 -0) -0 ;v228=(1328 + 339) -(1161 + (747 -242)) ;end if ((v228==(2 -1)) or (4172<=(14620 -10535))) then v155=2 + 0 ;break;end end end end break;end end end elseif ((v108<=(17 -6)) or ((4206 -((961 -(661 + 264)) + 56))<=(888 + 2849))) then if ((v108<=(3 + 6)) or ((11321 -6772)<(5267 -(196 + 752)))) then if (((2208 -(530 + 78))<=(3898 + (296 -119))) and (v108>8)) then do return;end else local v160=1419 -(397 + 1022) ;local v161;local v162;local v163;local v164;while true do if (((751 -(136 + 64))<=1328) and (v160==(0 -0))) then v161=0 -0 ;v162=nil;v160=1;end if (((5702 -2596)<(3449 + 987)) and (v160==(3 -1))) then while true do if ((v161==1) or ((1772 + 868)>((2298 -(373 + 1616)) + 4041))) then v164=nil;while true do if (((6623 -(869 + 1087))<=((4090 + 1753) -(935 + 229))) and ((1 + 0)==v162)) then v105[v163 + 1 ]=v164;v105[v163]=v164[v107[3 + (2 -1) ]];break;end if ((v162==(0 -0)) or (4166<=(3621 -(66 + 1049)))) then local v274=0 -0 ;local v275;while true do if (((1028 + 219)<=4098) and (v274==(0 + (59 -(45 + 14))))) then v275=0 -0 ;while true do if ((v275==1) or ((5117 -(257 + 45))<=((4166 -935) -(619 + 1152)))) then v162=1;break;end if ((v275==(756 -(161 + 595))) or (3303<=((275 + 696) -739))) then local v319=0 -0 ;while true do if ((v319==0) or ((1531 + 766)<(490 -(207 + 138)))) then v163=v107[3 -1 ];v164=v105[v107[2 + 1 ]];v319=446 -(149 + 75 + 221) ;end if ((((2 + 4912) -(885 + 171))>(3831 -(467 + 64))) and (v319==(1 + 0))) then v275=1089 -((1140 -(93 + 123)) + 164) ;break;end end end end break;end end end end break;end if ((1351<(4570 -(138 + 1009))) and (v161==0)) then local v229=160 -(39 + (479 -358)) ;while true do if ((1993>105) and (v229==(0 -0))) then v162=0 -0 ;v163=nil;v229=1091 -(680 + 328 + 82) ;end if ((v229==(1 + 0)) or ((564 + 530)>(2624 -(739 + 203)))) then v161=1 + 0 ;break;end end end end break;end if ((((10341 -7679) -(249 + 18))==2395) and (v160==(3 -2))) then v163=nil;v164=nil;v160=4 -2 ;end end end elseif (((9120 -4843)>(8115 -4483)) and (v108==(10 + 0))) then local v165=0 + 0 ;local v166;local v167;while true do if ((v165==(1 -0)) or ((420 + 1899)==(4979 -(16 + 2683)))) then while true do if ((v166==(853 -(363 + (1088 -(80 + 518))))) or ((70 + 1493 + 1156)==(1372 + 459))) then v167=v105[v107[1761 -(1273 + 484) ]];if ( not v167 or (3666<(7015 -3389))) then v93=v93 + 1 ;else local v250=0 + 0 ;local v251;while true do if ((v250==(178 -((1202 -(20 + 1125)) + 121))) or ((6601 -(1970 + 19))==(2598 -1698))) then v251=0 -0 ;while true do if ((v251==((1427 -(1290 + 137)) + 0)) or ((6211 -(13042 -10362))==(1141 + 1858))) then v105[v107[1 + 1 ]]=v167;v93=v107[3 + 0 ];break;end end break;end end end break;end end break;end if ((v165==(0 + 0)) or ((4635 -(1331 + 114))<(1708 -(70 + 880)))) then v166=257 -(93 + 164) ;v167=nil;v165=2 -1 ;end end else v105[v107[2 + 0 ]]={};end elseif ((v108<=13) or (((1811 + 1623) -(56 + 99))<=902)) then if ((v108>(541 -(389 + 140))) or (153>(10000 -6053))) then for v198=v107[(5 + 0) -(980 -(849 + 128)) ],v107[6 -3 ] do v105[v198]=nil;end else v105[v107[4 -2 ]]=v43[v107[(23 -14) -6 ]];end elseif ((v108<=(2 + 12)) or (4727<=(2530 -(508 + 84)))) then v105[v107[4 -2 ]]=v105[v107[6 -3 ]];elseif ((v108==15) or ((422 + 363)>(4776 -(11 + 973)))) then v105[v107[2]][v107[694 -((72 -33) + 435 + 217) ]]=v107[3 + 1 ];else local v203=0;local v204;local v205;while true do if (((10100 -7454)<=((8577 + 1197) -5685)) and (v203==((1804 -(926 + 136)) -(80 + 661)))) then while true do if (((6670 -(546 + 1188))>=(780 -307)) and (v204==(1238 -(159 + 1079)))) then v205=v107[1220 -(1037 + 181) ];v105[v205](v14(v105,v205 + (3 -2) ,v107[2 + 1 ]));break;end end break;end if (((0 -0)==v203) or ((3434 -1763)<=(958 -(37 + (79 -(9 + 59)))))) then v204=1915 -(1817 + 98) ;v205=nil;v203=1908 -(1243 + 664) ;end end end elseif (((891 + 1388)==(861 + 1418)) and (v108<=(1259 -(382 + 852)))) then if ((v108<=(77 -(36 + 21))) or ((1908 + 1591)==(6282 -(1258 + 212)))) then if ((v108<=18) or ((189 + 262)>=(6030 -3834))) then if ((v108>(109 -(7 + 85))) or (4736<=(815 + (3569 -1660)))) then v105[v107[1669 -(987 + (2058 -1378)) ]]=v107[2 + 1 ];else local v175=0 + 0 ;local v176;local v177;while true do if ((v175==(1 + (0 -0))) or ((474 + 1368)==(5968 -(1492 + 86)))) then while true do if ((v176==(0 -0)) or ((17790 -12922)<=(1962 + (2372 -1344)))) then v177=v107[1 + 0 + 1 ];v105[v177](v105[v177 + 1 + 0 ]);break;end end break;end if ((v175==(0 + 0)) or (((43134 -22300) -16632)>4293)) then v176=1414 -(992 + 422) ;v177=nil;v175=1806 -(1224 + 581) ;end end end elseif (((35 + 2320)<=(4675 -(20 + 476))) and (v108==19)) then v105[v107[1759 -(286 + 1471) ]]=v39(v100[v107[10 -7 ]],nil,v44);else local v179=1534 -(152 + 1382) ;local v180;local v181;while true do if ((v179==(1509 -(1251 + 258))) or ((2620 -(1227 + 615))==(8289 -3889))) then v180=0 -(0 -0) ;v181=nil;v179=480 -(199 + 280) ;end if (((6032 -3790)>=(3941 -2101)) and (v179==(1 -0))) then while true do if (((3392 -1127)==(8617 -(7923 -(1292 + 279)))) and ((0 -0)==v180)) then v181=v107[2];v105[v181]=v105[v181](v105[v181 + (1 -0) ]);break;end end break;end end end elseif ((v108<=22) or ((1612 -(229 + 516))==4626)) then if (((3471 + 689)>=(2863 + 1204)) and (v108>21)) then local v182=(0 + 0) -0 ;local v183;local v184;local v185;local v186;while true do if ((v182==(7 -5)) or ((8860 -5130)<=420)) then while true do if ((2115>=119) and ((0 -0)==v183)) then local v234=0 + (1630 -(1106 + 524)) ;while true do if (((7384 -4945)<(2753 + 1197)) and (v234==1)) then v183=1;break;end if ((v234==(0 + 0)) or (3118<=(4081 -(505 + 1290)))) then v184=0;v185=nil;v234=1;end end end if ((4210>=(5191 -(317 + 887 + 512))) and (v183==1)) then v186=nil;while true do if (((15358 -11407)>(7691 -(2047 + 2191))) and (v184==(259 -(149 + 34 + 75)))) then for v296=1 -0 , #v104 do local v297=0 + 0 ;local v298;local v299;local v300;while true do if (((1458 + 110)<(8308 -3321)) and (v297==(0 -0))) then v298=0;v299=nil;v297=1;end if (((1561 -(9 + 502))<=1739) and (v297==(1 -0))) then v300=nil;while true do if (((4892 -(542 + 439))>1963) and ((1 + 0)==v298)) then while true do if (((3301 -(667 + 287))>=1110) and ((970 -(902 + 68))==v299)) then v300=v104[v296];for v346=765 -(159 + 606) , #v300 do local v347=0 -0 ;local v348;local v349;local v350;while true do if ((v347==(0 + 0)) or ((3960 -2436)>(3484 -(1437 + 79)))) then local v355=0 + 0 ;while true do if ((v355==(2 -1)) or ((5630 -(598 + 3229))>=(3598 -(63 + 59)))) then v347=2 -1 ;break;end if (((5687 -((1740 -1056) + 372 + 7))>(103 + 54 + 4256)) and (v355==(0 + 0))) then v348=v300[v346];v349=v348[1 + (1288 -(607 + 681)) ];v355=1 -0 ;end end end if ((v347==(1692 -(635 + 1056))) or ((9413 -6689)<(298 + 275))) then v350=v348[1552 -(1113 + 437) ];if (((2604 -(420 + 405))>=1412) and (v349==v105) and (v350>=v185)) then local v365=0;local v366;local v367;while true do if (((902 -(46 + 80))>=(107 -(1335 -(996 + 259)))) and (v365==(173 -(31 + 141)))) then while true do if ((3392>((3687 -(45 + 85)) -(349 + 62))) and (v366==(0 + 0))) then v367=0 -0 ;while true do if (((366 + 288)<4360) and (v367==(0 + 0))) then v186[v350]=v349[v350];v348[1]=v186;break;end end break;end end break;end if ((v365==(0 -(644 -(465 + 179)))) or ((1315 + 853)<(874 + 840))) then v366=(1250 -(1095 + 155)) + 0 + 0 ;v367=nil;v365=1;end end end break;end end end break;end end break;end if ((v298==(1647 -(1083 + (1277 -713)))) or (((225 + 2364) -(1182 + (1364 -(463 + 92))))>=3771)) then local v329=0 + 0 ;while true do if (((5124 -(1820 -481))<(15061 -(25010 -14343))) and (v329==(48 -(34 + 14)))) then v299=1170 -(518 + 652) ;v300=nil;v329=1623 -(1082 + 540) ;end if ((4136==(16401 -12265)) and (v329==(496 -((1713 -1263) + 45)))) then v298=(1 + 0) -0 ;break;end end end end break;end end end break;end if (((8147 -4084)>(1077 -(702 + 237))) and (v184==(400 -((1899 -(1348 + 375)) + 224)))) then local v276=100 -(52 + 48) ;local v277;while true do if (((0 + 0)==v276) or ((5378 -(809 + 225))<=(8448 -5399))) then v277=0;while true do if (((642 -(223 + 404))<3377) and (v277==(0 -(0 -0)))) then local v320=0 + 0 ;while true do if ((v320==1) or ((6972 -4720)<=1253)) then v277=1 + 0 ;break;end if ((v320==(0 + (457 -(313 + 144)))) or (2974>=3287)) then v185=v107[8 -6 ];v186={};v320=1;end end end if (((1 -0)==v277) or ((795 + 2422)<((2386 -1569) -(323 + 299)))) then v184=1 + 0 ;break;end end break;end end end end break;end end break;end if ((v182==(1 -0)) or ((4005 -(935 + 1058))<=(1213 -(129 + 73)))) then v185=nil;v186=nil;v182=5 -3 ;end if ((4561>=(118 + 534)) and (v182==(0 -0))) then v183=0 + 0 ;v184=nil;v182=1;end end elseif (((675 + 984)==(1060 + 545 + 54)) and (v105[v107[1 + 1 ]]==v107[3 + 1 ])) then v93=v93 + (768 -(626 + 141)) ;else v93=v107[(1070 -(562 + 504)) -1 ];end elseif (((6056 -4259)<=(5447 -(60 + 1432))) and (v108<=23)) then if ((v107[3 -1 ]==v105[v107[15 -11 ]]) or ((5557 -2857)<=((1002 -630) + 195))) then v93=v93 + 1 + 0 ;else v93=v107[3];end elseif ((v108==(8 + 16)) or ((3416 -(130 + 150))<(2902 -1887))) then v93=v107[1114 -(559 + 552) ];else local v209=0 -(0 + 0) ;local v210;local v211;while true do if (((4008 + 362)>(2787 -(100 + (102 -76)))) and ((1 -(0 -0))==v209)) then while true do if (((0 -0)==v210) or ((13527 -9849)<=(2176 -(410 + 4)))) then v211=v107[1 + (3 -2) ];v105[v211]=v105[v211](v14(v105,v211 + (2 -1) ,v94));break;end end break;end if ((v209==(0 -0)) or ((3690 -944)>((6971 -(1378 + 405)) -((1272 -(656 + 597)) + 1549)))) then v210=1742 -(55 + 1687) ;v211=nil;v209=1486 -(130 + 1355) ;end end end elseif ((v108<=29) or ((6180 -(1309 + (1460 -(1317 + 2))))==(4006 -(279 + 1064)))) then if (((3385 -(703 + 391))<=(3434 -(144 + 100))) and (v108<=27)) then if (((632 + 310)<(1086 + 409)) and (v108>(80 -(4 + 1 + 49)))) then local v187=0;local v188;while true do if (((2155 + (1960 -757))>(4401 -2110)) and (v187==(0 + 0))) then v188=v107[(149 + 237) -(195 + 189) ];v105[v188](v14(v105,v188 + (2 -1) ,v94));break;end end else v105[v107[1 + 0 + 1 ]]();end elseif (((5609 -((1704 -1043) + (2147 -(573 + 718))))>=(589 + 618)) and (v108>28)) then v105[v107[660 -(206 + 452) ]][v107[2 + 1 ]]=v105[v107[15 -11 ]];elseif (((248 + 3117)>(124 + 1977)) and v105[v107[4 -2 ]]) then v93=v93 + (1 -0) ;else v93=v107[2 + 1 ];end elseif ((((11492 -8740) -(237 + 108))<=4257) and (v108<=(73 -42))) then if (((13509 -8769)>3069) and (v108==(122 -92))) then v43[v107[3]]=v105[v107[3 -1 ]];else v105[v107[1 + 1 ]]=v105[v107[2 + 1 ]][v107[2 + 2 ]];end elseif (((524 + 1845)<=(6768 -2444)) and (v108<=32)) then local v195=0 + 0 ;local v196;local v197;while true do if ((v195==1) or ((3974 -1366)>(10733 -6026))) then while true do if (((63 + 8)<=(1533 + 1979)) and (v196==(0 -0))) then v197=v107[2];v105[v197]=v105[v197](v14(v105,v197 + (1 -0) ,v107[3]));break;end end break;end if (((3963 -(475 + 89))>=(677 -(135 + 197))) and (v195==0)) then v196=207 -(118 + 89) ;v197=nil;v195=2 -(1 + 0) ;end end elseif ((((17354 -10968) -3602)==(9362 -6578)) and (v108==(33 + 0))) then v105[v107[2]]=v44[v107[2 + 1 ]];else v105[v107[8 -6 ]]=v107[1 + 2 ]~=(1576 -(287 + (2528 -1239))) ;end v93=v93 + 1 ;break;end if (((3052 + 1933)==(12827 -7842)) and (v110==0)) then local v122=0 + 0 ;while true do if ((v122==1) or (4532==((19735 -13559) -((26 -20) + 1266)))) then v110=1;break;end if (((5991 -(531 + 525))>=((921 -(87 + 225)) + 796)) and (v122==(0 -(0 + 0)))) then v107=v99[v93];v108=v107[1];v122=2 -1 ;end end end end end end A,B=v37(v12(v97));if  not A[1] then local v111=0;local v112;while true do if (0==v111) then v112=v42[4][v93] or "?" ;error("Script error at ["   .. v112   .. "]:"   .. A[2] );break;end end else return v14(A,2,B);end end;end end end;return v39(v38(),{},v26)(...);end if (v27==6) then v38=nil;v38=function()local v67=0 + 0 ;local v68;local v69;local v70;local v71;local v72;local v73;local v74;local v75;while true do if (v67==(2 + 0)) then v72=nil;v73=nil;v67=5 -2 ;end if (v67==(1753 -(966 + 787))) then v68=0 + 0 ;v69=nil;v67=1007 -(986 + 20) ;end if (v67~=3) then else v74=nil;v75=nil;v67=4;end if ((16 -12)~=v67) then else while true do if (v68==(0 + 0)) then v69=0 -0 ;v70=nil;v68=1 -0 ;end if (v68~=(1 + 0)) then else local v113=0 + 0 ;while true do if (v113~=1) then else v68=1 + 1 ;break;end if (v113==(356 -(349 + 7))) then v71=nil;v72=nil;v113=1 + 0 ;end end end if (v68==3) then v75=nil;while true do local v115=0;local v116;local v117;while true do if (1~=v115) then else while true do if (v116==0) then v117=0;while true do if (v117==1) then if ((0 -0)==v69) then local v126=0 -0 ;local v127;while true do if (v126==(0 -0)) then v127=0 + 0 ;while true do if (v127~=0) then else v70={};v71={};v127=1137 -(66 + 1070) ;end if (v127==(3 -2)) then v72={};v69=2 -1 ;break;end end break;end end end if (v69==(7 -5)) then local v128=0 -0 ;local v129;while true do if (v128~=0) then else v129=553 -(107 + 446) ;while true do if (v129==(870 -(833 + 37))) then local v221=0;while true do if (v221==(1 -0)) then v129=1 + 0 ;break;end if ((0 -0)==v221) then for v278=1347 -(1013 + 333) ,v74 do local v279=0 + 0 ;local v280;local v281;local v282;local v283;while true do if (v279~=(0 + 0)) then else v280=0;v281=nil;v279=1;end if ((1 -0)~=v279) then else v282=nil;v283=nil;v279=1 + 1 ;end if ((2 + 0)==v279) then while true do if (v280==(1299 -(205 + 1094))) then local v321=0 -0 ;local v322;while true do if (v321~=(0 + 0)) then else v322=327 -(112 + 215) ;while true do if (v322==(4 -3)) then v280=1 + 0 ;break;end if (v322~=(1224 -(241 + 983))) then else local v352=1607 -(1301 + 306) ;while true do if (v352==(1400 -(570 + 829))) then v322=1 + 0 ;break;end if (v352~=0) then else v281=0;v282=nil;v352=2 -1 ;end end end end break;end end end if (v280==(3 -2)) then v283=nil;while true do if (v281==0) then local v339=0;while true do if ((1 + 0)~=v339) then else v281=383 -(261 + 121) ;break;end if (v339==(0 -0)) then local v353=0 -0 ;while true do if (v353~=(0 -0)) then else v282=v31();v283=nil;v353=1 + 0 ;end if (v353==1) then v339=1;break;end end end end end if (v281==(1 + 0)) then if (v282==(941 -(457 + 483))) then v283=v31()~=(1034 -(38 + 996)) ;elseif (v282==(1738 -(1570 + 166))) then v283=v34();elseif (v282~=3) then else v283=v35();end v75[v278]=v283;break;end end break;end end break;end end end v73[3]=v31();v221=4 -3 ;end end end if (v129==(1 + 0)) then for v237=1,v33() do local v238=0;local v239;local v240;while true do if (v238==(951 -(517 + 434))) then v239=0 + 0 ;v240=nil;v238=1;end if (v238==(227 -(173 + 53))) then while true do if (v239~=0) then else v240=v31();if (v30(v240,1 + 0 ,1 + 0 )==(0 + 0)) then local v309=1485 -(362 + 1123) ;local v310;local v311;local v312;local v313;local v314;while true do if (v309==0) then local v330=0 -0 ;while true do if (v330==(892 -(752 + 139))) then v309=408 -(180 + 227) ;break;end if (v330==(1227 -(985 + 242))) then v310=0;v311=nil;v330=1;end end end if (v309==1) then v312=nil;v313=nil;v309=4 -2 ;end if (v309==2) then v314=nil;while true do if (v310~=(1 -0)) then else local v351=0;while true do if (v351~=(0 -0)) then else v313=nil;v314=nil;v351=1;end if (v351~=(1 + 0)) then else v310=2;break;end end end if (v310==(1 + 1)) then while true do if (v311~=(1632 -(172 + 1459))) then else local v357=0 + 0 ;local v358;while true do if (v357~=0) then else v358=209 -(171 + 38) ;while true do if (v358~=(0 -0)) then else local v374=0 -0 ;while true do if (v374==(1542 -(1124 + 417))) then v358=1 -0 ;break;end if (v374==(0 -0)) then v314={v32(),v32(),nil,nil};if (v312==0) then local v384=0 + 0 ;while true do if (v384==(0 + 0)) then v314[3 + 0 ]=v32();v314[4]=v32();break;end end elseif (v312==(2 -1)) then v314[3 + 0 ]=v33();elseif (v312==2) then v314[1540 -(1339 + 198) ]=v33() -((325 -(29 + 294))^(234 -(178 + 40))) ;elseif (v312==(950 -(745 + 202))) then local v389=0 + 0 ;while true do if (v389==(391 -(125 + 266))) then v314[3]=v33() -(2^(24 -8)) ;v314[6 -2 ]=v32();break;end end end v374=1 -0 ;end end end if (v358==(283 -(116 + 166))) then v311=3 -1 ;break;end end break;end end end if (v311==(701 -(232 + 467))) then local v359=44 -(28 + 16) ;while true do if (v359==(1456 -(1254 + 202))) then local v372=0 + 0 ;while true do if (v372==(1 + 0)) then v359=1 + 0 ;break;end if (v372==(0 + 0)) then if (v30(v313,3 -2 ,2 -1 )~=1) then else v314[1308 -(194 + 1112) ]=v75[v314[2]];end if (v30(v313,1 + 1 ,1 + 1 )==(2 -1)) then v314[3 + 0 ]=v75[v314[1 + 2 ]];end v372=1772 -(622 + 1149) ;end end end if (v359~=(3 -2)) then else v311=876 -(757 + 116) ;break;end end end if (0==v311) then local v360=0 + 0 ;local v361;local v362;while true do if (v360==(2 -1)) then while true do if (v361~=0) then else v362=0 -0 ;while true do if (v362~=0) then else local v379=507 -(362 + 145) ;local v380;while true do if (v379~=(0 -0)) then else v380=0;while true do if (v380==1) then v362=1 -0 ;break;end if ((0 + 0)~=v380) then else v312=v30(v240,2 + 0 ,1469 -(123 + 1343) );v313=v30(v240,1 + 3 ,6 + 0 );v380=441 -(94 + 346) ;end end break;end end end if (v362==(4 -3)) then v311=1 + 0 ;break;end end break;end end break;end if (v360==0) then v361=1976 -(152 + 1824) ;v362=nil;v360=1;end end end if (v311~=(8 -5)) then else if (v30(v313,1040 -(648 + 389) ,3)==(143 -(79 + 63))) then v314[15 -11 ]=v75[v314[3 + 1 ]];end v70[v237]=v314;break;end end break;end if (v310==(0 + 0)) then v311=0 -0 ;v312=nil;v310=571 -(503 + 67) ;end end break;end end end break;end end break;end end end v69=1650 -(1545 + 102) ;break;end end break;end end end break;end if (v117~=(0 -0)) then else local v125=855 -(601 + 254) ;while true do if (v125~=(1 -0)) then else v117=1 + 0 ;break;end if (v125~=0) then else if (v69==(862 -(710 + 149))) then local v216=0 -0 ;local v217;while true do if (v216==(0 + 0)) then v217=0 + 0 ;while true do local v241=0 + 0 ;while true do if (v241==(1027 -(562 + 465))) then if (v217==(1040 -(502 + 537))) then return v73;end if (v217==(1382 -(1224 + 158))) then for v301=1 + 0 ,v33() do v71[v301-(2 -1) ]=v38();end for v303=1 -0 ,v33() do v72[v303]=v33();end v217=1187 -(543 + 643) ;end break;end end end break;end end end if (v69~=(2 -1)) then else local v218=0;local v219;while true do if (v218~=(0 + 0)) then else v219=0 -0 ;while true do if ((0 + 0)==v219) then local v256=0 -0 ;local v257;while true do if (v256~=(0 + 0)) then else v257=0 + 0 ;while true do if (v257==(0 -0)) then local v315=848 -(100 + 748) ;while true do if (v315~=(409 -(38 + 370))) then else v257=599 -(223 + 375) ;break;end if (v315==(1509 -(487 + 1022))) then v73={v70,v71,nil,v72};v74=v33();v315=1;end end end if (v257~=(3 -2)) then else v219=3 -2 ;break;end end break;end end end if (v219==1) then v75={};v69=3 -1 ;break;end end break;end end end v125=1;end end end end break;end end break;end if (v115~=(0 -0)) then else v116=519 -(93 + 426) ;v117=nil;v115=3 -2 ;end end end break;end if (v68~=(1919 -(227 + 1690))) then else v73=nil;v74=nil;v68=1 + 2 ;end end break;end if (v67==1) then v70=nil;v71=nil;v67=2 + 0 ;end end end;v39=nil;v27=7;end if (2==v27) then v31=function()local v76=860 -(664 + 179 + 17) ;local v77;while true do if (v76==(1 + 0)) then return v77;end if (v76==(1128 -(553 + 575))) then v77=v2(v25,v28,v28);v28=v28 + (4 -3) ;v76=1;end end end;v32=nil;v32=function()local v78=1658 -(104 + 1554) ;local v79;local v80;while true do if (((0 -0) -0)==v78) then v79,v80=v2(v25,v28,v28 + (426 -(282 + 142)) );v28=v28 + (5 -3) ;v78=1 + 0 ;end if (v78==(33 -(25 + 7))) then return (v80 * ((287 -188) + 157)) + v79 ;end end end;v27=3;end if (v27==5) then v36=v33;v37=nil;v37=function(...)return {...},v13("#",...);end;v27=6;end if (v27==1) then v30=nil;v30=function(v45,v46,v47)if v47 then local v83=0 -0 ;local v84;while true do if (v83==(0 -0)) then v84=(v45/((1 + 1)^(v46-(2 -1))))%((2 + 0)^(((v47-1) -(v46-(2 -1))) + 1)) ;return v84-(v84%(1293 -(659 + 633))) ;end end else local v85=987 -(92 + 895) ;local v86;while true do if (v85==(0 -0)) then v86=(162 -(60 + 95 + 5))^(v46-(623 -(314 + (769 -461)))) ;return (((v45%(v86 + v86))>=v86) and 1) or (1792 -(210 + 1582)) ;end end end end;v31=nil;v27=2;end end end;vv10(),...);break;end if (4==v0) then v13=select;v14=unpack or table.unpack ;v15=tonumber;v0=5;end if (3==v0) then v10=getfenv or function()return _ENV;end ;v11=setmetatable;v12=pcall;v0=4;end end end
